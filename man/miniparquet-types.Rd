% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/miniparquet-package.R
\name{miniparquet-types}
\alias{miniparquet-types}
\title{Miniparquet's type maps}
\description{
How miniparquet maps R types to Parquet types.
}
\section{R's data types}{
When writing out a data frame, miniparquet maps R's data types to Parquet
logical types. This is how the mapping is performed.

These rules will likely change until miniparquet reaches version 1.0.0.
\enumerate{
\item Factors (i.e. vectors that inherit the \emph{factor} class) are converted
to character vectors using \code{as.character()}, then written as a
\code{STRSXP} (character vector) type.
\item Integer vectors (\code{INTSXP}) are written as \code{INT(32, true)} logical type,
which corresponds to the \code{INT32} type.
\item Real vectors (\code{REALSXP}) are written as the \code{DOUBLE} type.
\item Character vectors (\code{STRSXP}) are written as the \code{STRING} logical type,
which has the \code{BYTE_ARRAY} type.
\item Logical vectors (\code{LGLSXP}) are written as the \code{BOOLEAN} type.
\item Other vectors error currently.
}
}

\section{Parquet's data types}{
When reading a Parquet file, currently miniparquet mostly relies on the
(low level) data types, instead of the logical types. The exact rules are
below.

These rules will likely change until miniparquet reaches version 1.0.0.
\enumerate{
\item \code{BOOLEAN} is read as a logical vector (\code{LGLSXP}).
\item \code{INT32} is read as an integer vector (\code{INTSXP}).
\item \code{INT64}, \code{DOUBLE} and \code{FLOAT} are read as real vectors (\code{REALSXP}).
\item \code{INT96} is read as a \code{POSIXct} read vector with the \code{tzone} attribute
set to \code{"UTC"}.
\item The \code{DECIMAL} converted type (\code{FIXED_LEN_BYTE_ARRAY} type) is read
as a real vector (\code{REALSXP}).
\item \code{BYTE_ARRAY} is read as a \emph{factor} object if the file was written
by Arrow and the original data type of the column was a factor.
More precisely, the file has the Arrow schema in the key-value metadata
under the key \code{ARROW:schema} and the corresponding column is a \code{Utf8}
Arrow column with a dictionary. This does not happen if the
\code{miniparquet.use_arrow_metadata} option is set to \code{FALSE}.
\item Otherwise \code{BYTE_ARRAY} is read a character vector (\code{STRSXP}).
}
}

\seealso{
\link{miniparquet-package} for options that modify the type
mappings.
}
