% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/miniparquet.R
\name{parquet_read_metadata}
\alias{parquet_read_metadata}
\alias{read_parquet_metadata}
\title{Read the metadata of a Parquet file}
\usage{
parquet_read_metadata(file)

read_parquet_metadata(file)
}
\arguments{
\item{file}{Path to a Parquet file.}
}
\value{
A named list with entries:
\itemize{
\item \code{file_meta_data}: a named list with file meta data:
\itemize{
\item \code{version}: Parquet version, an integer.
\item \code{num_rows}: total number of rows.
\item \code{key_value_metadata}: a data frame with two character
columns called \code{key} and \code{value}. This is the key-value metadata
of the file. Arrow stores its schema here.
\item \code{created_by}: A string scalar, usually the name of the software
that created the file.
\item \code{encryption_algorithm}: not implemented yet.
\item \code{footer_signing_key_metadata}: not implemented yet.
}
\item \code{schema}: data frame, the schema of the file. It has one row for
each node (inner node or leaf node). For flat files this means one
root node (inner node), always the first one, and then one row for
each "real" column. For nested schemas, the rows are in depth-first
search order. Most important columns are:
\itemize{
\item \code{name}: column name.
\item \code{type}: data type. One of the low level data types.
\item \code{type_length}: length for fixed length byte arrays.
\item \code{repettion_type}: character, one of \code{REQUIRED}, \code{OPTIONAL} or
\code{REPEATED}.
\item \code{logical_type}: a list column, the logical types of the columns.
An element has at least an entry called \code{type}, and potentially
additional entries, e.g. \code{bit_width}, \code{is_signed}, etc.
\item \code{num_children}: number of child nodes. Should be a non-negative
integer for the root node, and \code{NA} for a leaf node.
}
\item \verb{$row_groups}: a data frame, information about the row groups.
\item \verb{$column_chunks}: a data frame, information about all column chunks.
}
}
\description{
This function should work on all files, even if \code{\link[=read_parquet]{read_parquet()}} is
unabled to read them, because of an unsupported schema, encoding,
compression or other reason.
}
\examples{
file_name <- system.file("extdata/userdata1.parquet", package = "miniparquet")
miniparquet::parquet_read_metadata(file_name)
}
\seealso{
\code{\link[=read_parquet]{read_parquet()}}, \code{\link[=write_parquet]{write_parquet()}}.
}
